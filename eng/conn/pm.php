<?php  require_once('lib/config.php');  require_once('lib/dbo.php');  require_once('lib/defines.php');  require_once('lib/object.php');  require_once('eng/sec/session.php');  require_once('lib/utility.php');  class PM extends Object  {   protected $_aid;   protected $_not_read;   public function __construct($aid)   {    parent::__construct();    $this->_aid = $aid;    $this->_not_read = $this->Counts(true, NOT_READ, ARC_RECIVER|DEL_RECIVER);   }   public function Counts($type, $eq, $neq  = 0)   {    global $dbo;    $text = sprintf('SELECT COUNT(*) AS `num` FROM `%spm` WHERE ',DB_PERFIX);        if($type)     $text .= sprintf('(`re` = \'%s\' )',$this->_aid);    else     $text .= sprintf('(`se` = \'%s\' )',$this->_aid);        if($eq != 0)     $text .= sprintf(' AND (`flag` & \'%d\')', $eq);         if($neq != 0)     $text .= sprintf(' AND NOT(`flag` & \'%d\')', $neq);        return (int)$dbo->ExectueScaler($text, 'num');   }   public function GetNotRead()   {    return $this->_not_read;   }   public function GetList($type, $eq, $neq  = 0, $p = 0, $r = 10)   {    $text = sprintf('SELECT `pm` . * , `ac`.`name` FROM `%spm` AS `pm` LEFT JOIN `%saccount` AS `ac` ON ',      DB_PERFIX, DB_PERFIX);         if($type)     $text .= sprintf(' (`pm`.`se` = `ac`.`id`) WHERE (`re` = \'%s\' )',$this->_aid);    else     $text .= sprintf(' (`pm`.`re` = `ac`.`id`) WHERE (`se` = \'%s\' )',$this->_aid);        if($eq != 0)     $text .= sprintf(' AND (`flag` & \'%d\')', $eq);         if($neq != 0)     $text .= sprintf(' AND NOT(`flag` & \'%d\')', $neq);             $text .= sprintf(' ORDER BY `pm`.`modify` DESC LIMIT %s, %s',$p* $r, $r);    global $dbo;    $sql =  $dbo->ExectueQuery($text);    $arr = array();        while($row = $dbo->Read($sql))     $arr[$row['id']] = $row;    $dbo->Cancel($sql);    return $arr;   }   public function SetFlag($type, $id, $flag)   {    global $dbo;    $text = sprintf('UPDATE `%spm` SET `flag` = `flag` | \'%u\' WHERE `id` = \'%u\' AND ',DB_PERFIX, $flag, $id);    if($type)     $text .= sprintf(' `re` = \'%d\'',$this->_aid);    else     $text .= sprintf(' `se` = \'%d\'',$this->_aid);    $dbo->ExectueQuery($text);   }   public function RemoveFlag($type, $id, $flag)   {    global $dbo;    $flag = ~$flag;    $text = sprintf('UPDATE `%spm` SET `flag` = `flag` & \'%u\' WHERE `id` = \'%u\' AND ',DB_PERFIX, $flag, $id);    if($type)     $text .= sprintf(' `re` = \'%d\'',$this->_aid);    else     $text .= sprintf(' `se` = \'%d\'',$this->_aid);    $dbo->ExectueQuery($text);   }   public function Load($id)   {    global $dbo;    $this->_data = $dbo->ExectueRow(sprintf('SELECT * FROM `%spm` WHERE (`id` = \'%u\') AND (`se` = \'%d\' OR `re` = \'%d\')',     DB_PERFIX,$id,$this->_aid,$this->_aid));    return $this->IsLoad();   }   public function NewPm()   {    $this->_data['modify'] = $_SERVER['REQUEST_TIME'];    global $dbo;    $dbo->InsertRow(sprintf('%spm',DB_PERFIX) , $this->GetArray());   }  }  ?>