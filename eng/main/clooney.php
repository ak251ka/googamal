<?php  require_once('lib/config.php');  require_once('lib/object.php');  require_once('lib/utility.php');  require_once('lib/dbo.php');  require_once('lib/defines.php');    class Clooney extends Object  {   public function __construct($a)   {    parent::__construct($a);   }   public static function &TownClooney($tid)   {    $arr = array();    global $dbo;    $sql = $dbo->ExectueQuery(sprintf('SELECT * FROM `%sclooney` WHERE `tid` = \'%d\'',DB_PERFIX, $tid));    while($row = $dbo->Read($sql))     $arr[$row['id']] = new Clooney($row);    return $arr;   }   public function Load($cid)   {    global $dbo;    $this->_data = $dbo->ExectueRow(sprintf('SELECT * FROM `%sclooney` WHERE `id` = \'%d\'',DB_PERFIX, $cid));    return $this->IsLoad();   }   public function Update($ts)   {    $tick = ($ts - (int)strtotime($this->_data['modify']))/ ONE_TICK;    if(!$this->_data['tid'])    {     $res_pro = ((float)$this->_data['kind'] * BASE_RES_CLOONEY) / 24 / ONE_TICK;     for($i = 1; $i < 6; $i++)     {      $this->_data["r$i"] =  $this->_data["r$i"] + ($res_pro * $tick);      if($this->_data["r$i"] > (float)$this->_data['kind'] * BASE_RES_CLOONEY)       $this->_data["r$i"] = (float)$this->_data['kind'] * BASE_RES_CLOONEY;     }          if($this->_data['tack'] == $this->_data['max_t'])     {      if((int)$this->_data['max_t'] > 3)       $this->_data['max_t']--;      $this->_data['tack'] = ZERO;      if(!strtotime($this->_data['make']))        $this->_data['make'] = Dates(TOMORROW);      $i = rand(1, 16);      $n = (int)$this->_data['kind'] * 2;      if((int)$this->_data["b$i"] + $n <= 255 )       $this->_data["b$i"] =  $this->_data["b$i"] + $n;      else      {       for($i = 15; $i > 0 and $n; $i--)       {        $j = 255 - (int)$this->_data["b$i"];        if($j > $n)        {         $this->_data["b$i"] = (int)$this->_data["b$i"] + $n;         $n = 0;        }        else        {         $this->_data["b$i"] = (int)$this->_data["b$i"] + $j;         $n -= $j;        }       }      }     }     $make = strtotime($this->_data['make']);     if( $make and $make < $ts);     {      $tick = (int)floor(($ts - $make) / ONE_TICK / 5);      $cmake = true;      for($i = 1; $i < 16 and $tick; $i++)      {       if($this->_data["b$i"])       {        $this->_data["t$i"] = (int)$this->_data["t$i"] + $tick;        if((int) $this->_data["t$i"] > (int)$this->_data["b$i"])        {         $this->_data["t$i"] = $this->_data["b$i"];         $cmake = false;        }       }      }      if($tick)       $this->_data['make'] = Dates($make + ($tick * ONE_TICK * 5));         if($cmake)       $this->_data['make'] = '0000-00-00 00:00:00';     }    }    else    {     if((int)$this->_data['loyalty'] < 100)      $this->_data['loyalty'] = $this->_data['loyalty'] + $tick;     if($this->_data['loyalty'] > 100)      $this->_data['loyalty'] = 100;     for($i = 1; $i < 15; $i++)     {     }    }    $this->_data['modify'] = Dates($ts);   }   public function NewCloony()   {    $this->_data['kind'] = rand(1,6);    for($i = 1; $i < 6; $i++)     $this->_data["r$i"] = $this->_data['kind'] * BASE_RES_CLOONEY;    for($i = 1; $i < $this->_data['kind']; $i++)    {     $j = rand(1, 15);     $this->_data["b$j"] = rand(1, $this->_data['kind']);     $this->_data["t$j"] =  $this->_data["b$j"];    }   }   public function Save()   {    if(!$this->IsLoad())     return;    global $dbo;    $dbo->UpdateRow(sprintf('%scloony',DB_PERFIX), $this->_data, $this->_data['id']);   }  }  ?>