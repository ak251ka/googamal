<?php  require_once('lib/config.php');  require_once('lib/dbo.php');  require_once('lib/defines.php');  require_once('lib/object.php');  class Union  {   public function IsAllay($uid1,$uid2)   {    if(!$uid1 or !$uid2)     return false;    if($uid1 == $uid2)     return true;    global $dbo;    $police = $dbo->ExectueScaler(sprintf('SELECT `kind` FROM `%sunion_p` WHERE `uid1` = \'%s\' AND `uid2` = \'%s\'',     DB_PERFIX,$uid1,$uid2),'kind');    return false;   }   public function IsMember($uid,$pid)   {    global $dbo;    return $dbo->ExectueScaler(sprintf('SELECT COUNT(*) AS `c` FROM `%sunion_m` WHERE `uid` = \'%s\' AND `pid` = \'%s\'',     DB_PERFIX,$uid,$pid),'c');        }   public function GetID($name)   {    global $dbo;    return $dbo->ExectueScaler(sprintf('SELECT `id` FROM `%sunion_b` WHERE `name` = \'%s\' LIMIT 1',DB_PERFIX,$name),'id');   }   public function GetName($id)   {    global $dbo;    return $dbo->ExectueScaler(sprintf('SELECT `name` FROM `%sunion_b` WHERE `id` = \'%s\' LIMIT 1',DB_PERFIX,$id),'name');   }   public function &GetOfficer($id)   {    global $dbo;    $list = array();    $sql = $dbo->ExectueQuery(sprintf('SELECT `o`.*,`a`.`name` FROM `%sunion_o` AS `o` LEFT JOIN `%saccount` AS `a` ON(`o`.`pid` = `a`.`id`) WHERE `o`.`uid` =\'%s\''     ,DB_PERFIX,DB_PERFIX,$id));      while($row = $dbo->Read($sql))     $list[] = new Object($row);    $dbo->Cancel($sql);    return $list;   }   public function &GetMemberInfo($id)   {    global $dbo;    $list = array();    $sql = $dbo->ExectueQuery(     sprintf('SELECT `m`.*,`a`.`name` FROM `%sunion_m` AS `m` LEFT JOIN `%saccount` AS `a` ON (`m`.`pid` = `a`.`id`)  WHERE `m`.`uid` =\'%s\' ORDER BY `m`.`rank` DESC',      DB_PERFIX, DB_PERFIX, $id));    while($row = $dbo->Read($sql))     $list[] = new Object($row);    $dbo->Cancel($sql);    return $list;   }   public function &GetInfo($id)   {    global $dbo;    $row = $dbo->ExectueRow(sprintf(     'SELECT `b`.*,`p`.`statement` FROM `%sunion_b` AS `b` LEFT JOIN `%sprofile` AS `p` ON (`b`.`id` = `p`.`owner`) WHERE `b`.`id` = \'%s\' AND `p`.`kind` = \'%s\'',     DB_PERFIX, DB_PERFIX, $id, UNION_KIND));    if(empty($row))    {     $row = NULL;     return $row;    }    $obj = new Object($row);    return $obj;   }   public function GetRank($id)   {    global $dbo;    $dbo->ExectueQuery('SET @prev_value = NULL;');    $dbo->ExectueQuery('SET @rank_count = 0;');    return $dbo->ExectueScaler(sprintf('SELECT `rank` FROM(SELECT `id`, `pop`, CASE WHEN @prev_value = `pop` THEN @rank_count WHEN @prev_value := `pop` THEN @rank_count := @rank_count + 1 END AS `rank` FROM `%sunion_b` ORDER BY `pop` DESC) AS `t`  WHERE `t`.`id` = \'%s\'', DB_PERFIX, $id),'rank');   }   public function GetMedal($id)   {    global $dbo;    global $lang;    $list = array();    $sql = $dbo->ExectueQuery(     sprintf('SELECT * FROM `%smedal` WHERE `owner` =\'%s\' AND `kind` = \'%s\'',      DB_PERFIX, $id,UNION_KIND));    $i = 0;    while($row = $dbo->Read($sql))    {     $list[$i] = new Object($row);     $list[$i]->medal = sprintf('%s_%s_%s', $row['medal'], $row['subkind'], $row['repeats']);     $list[$i]->text = sprintf(      $lang['MedalText'],$lang['M_'.$row['medal']], $row['subkind'],$lang['M_N_'.$row['medal']],$lang['M_W_'.$row['repeats']],      $row['point'],$row['week']);     $i++;    }    $dbo->Cancel($sql);    return $list;   }   public function &GetEvent($id)   {    global $dbo;    $list = array();    $sql = $dbo->ExectueQuery(sprintf('SELECT `e` . * , `a1`.`name` AS `aname1` , `u1`.`name` AS `uname1` , `a2`.`name` AS `aname2` , `u2`.`name` AS `uname2` FROM `%1$sunion_e` AS `e` LEFT JOIN `%1$saccount` AS `a1` ON ( `e`.`a` = `a1`.`id` ) LEFT JOIN `%1$saccount` AS `a2` ON ( `e`.`b` = `a2`.`id` ) LEFT JOIN `%1$sunion_b` AS `u1` ON ( `e`.`a` = `u1`.`id` ) LEFT JOIN `%1$sunion_b` AS `u2` ON ( `e`.`b` = `u2`.`id` ) WHERE `e`.`uid` = \'%2$s\'  ORDER BY `e`.`modify` DESC', DB_PERFIX, $id));    while($row = $dbo->Read($sql))     $list[]= new Object($row);    $dbo->Cancel($sql);      return $list;   }   public function UnionEstablished($name, $slogan, $lim, $pid,$pname, $tid)   {    $arr = array();    global $dbo;    global $lang;    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'1\' WHERE `id` = \'%s\' AND `locks` = \'0\' LIMIT 1',DB_PERFIX,$pid));    if(!$dbo->AffectedRows())     return;    $pop = $dbo->ExectueScaler(sprintf('SELECT `pop` FROM `%saccount` WHERE `id` = \'%s\' LIMIT 1', DB_PERFIX, $pid), 'pop');    $arr['name'] = $name;    $arr['slogan'] = $slogan;    $arr['pid'] = $pid;    $arr['tid'] = $tid;    $arr['members'] = '1';    $arr['limits'] = $lim;    $arr['pop'] = $pop;    $dbo->InsertRow(DB_PERFIX.'union_b', $arr);    $uid = $dbo->InsertedID();    $dbo->ExectueQuery(sprintf('INSERT INTO `%sunion_o` (`uid`, `pid`, `job`, `permission`) VALUES (\'%s\', \'%s\', \'%s\', \'2147483647\');',     DB_PERFIX, $uid, $pid, $lang['Organizer']));    $dbo->ExectueQuery(sprintf('INSERT INTO `%sunion_e` (`uid`, `kind`, `a`, `b`, `modify`) VALUES (\'%s\', \'%s\', \'%s\',\'%s\', \'%s\');',     DB_PERFIX, $uid, E_U_CREATE, $uid, $pid, $_SERVER['REQUEST_TIME']));    $dbo->ExectueQuery(sprintf('INSERT INTO `%sprofile` (`owner`, `kind`) VALUES (\'%s\', \'%s\');',     DB_PERFIX,$uid, UNION_KIND));    $dbo->ExectueQuery(sprintf('INSERT INTO `%sunion_m` ( `uid`, `pid`, `rank`) VALUES  (\'%s\', \'%s\',\'11\');',     DB_PERFIX, $uid,$pid));    $dbo->ExectueQuery(sprintf('INSERT INTO `%spoint` (`owner`, `kind`) VALUES (\'%s\', \'%s\');',     DB_PERFIX,$uid, UNION_KIND));    $dbo->ExectueQuery(sprintf('UPDATE `%stown` SET `uid` = \'%s\' WHERE `pid` = \'%s\'',DB_PERFIX,$uid, $pid));    $dbo->ExectueQuery(sprintf('UPDATE `%sclooney` SET `uid` = \'%s\' WHERE `pid` = \'%s\'',DB_PERFIX,$uid, $pid));    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `uid` = \'%s\', `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',     DB_PERFIX,$uid, $pid));    return $uid;   }   public function Leave($uid, $pid)   {    if(!$uid)     return;    global $dbo;    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'1\' WHERE `id` = \'%s\' AND `locks` = \'0\' LIMIT 1',     DB_PERFIX, $pid));    if(!$dbo->AffectedRows())     return;    $arr = array();    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `uid` = \'0\' WHERE `id` = \'%s\' LIMIT 1',     DB_PERFIX, $pid));    $dbo->ExectueQuery(sprintf('UPDATE `%stown` SET `uid` = \'0\' WHERE `pid` = \'%s\'',      DB_PERFIX, $pid));    $dbo->ExectueQuery(sprintf('UPDATE `%sclooney` SET `uid` = \'0\' WHERE `pid` = \'%s\'',      DB_PERFIX, $pid));    $row = $dbo->ExectueRow(sprintf('SELECT * FROM `%sunion_b` WHERE `id` = \'%s\'', DB_PERFIX, $uid));    if(empty($row))    {     $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',      DB_PERFIX, $pid));     return;    }    if($row['pid'] == $pid)     $this->DestroyUnion($uid);    else    {     $arr['uid'] = $uid;     $arr['kind'] = E_U_LEAVE;     $arr['a'] = $pid;     $arr['b'] = $uid;     $arr['modify'] = $_SERVER['REQUEST_TIME'];     $dbo->InsertRow(DB_PERFIX.'union_e', $arr);     $pop = $dbo->ExectueScaler(sprintf('SELECT `pop` FROM `%saccount` WHERE `id` = \'%s\'', DB_PERFIX, $pid),'pop');     $dbo->ExectueQuery(sprintf('UPDATE `%sunion_b` SET `members` = `members` - \'1\',`pop` = `pop` - \'%s\' WHERE `id` = \'%s\' LIMIT 1',       DB_PERFIX,$pop, $uid));     $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_m` WHERE `uid` = \'%s\' AND `pid` = \'%s\' LIMIT 1', DB_PERFIX, $uid, $pid));     $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_o` WHERE `uid` = \'%s\' AND `pid` = \'%s\' LIMIT 1', DB_PERFIX, $uid, $pid));    }    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',      DB_PERFIX, $pid));   }   public function DestroyUnion($uid)   {    global $dbo;    $dbo->ExectueQuery(sprintf('UPDATE `%stopic` SET `ac` = \'0\' WHERE `uid` = \'%s\'',DB_PERFIX, $uid));    $dbo->ExectueQuery(sprintf('DELETE FROM `%smedal` WHERE `owner` = \'%s\' AND `kind` = \'%s\'',DB_PERFIX, $uid, UNION_KIND));    $dbo->ExectueQuery(sprintf('DELETE FROM `%sprofile` WHERE `owner` = \'%s\' AND `kind` = \'%s\'',DB_PERFIX, $uid, UNION_KIND));    $dbo->ExectueQuery(sprintf('DELETE FROM `%spoint` WHERE `owner` = \'%s\' AND `kind` = \'%s\'',DB_PERFIX, $uid, UNION_KIND));    $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_o` WHERE `uid` = \'%s\'',DB_PERFIX, $uid));    $dbo->ExectueQuery(sprintf('DELETE FROM `%1$sunion_p` WHERE `uid1` = \'%2$s\' OR `uid2` = \'%2$s\'',DB_PERFIX, $uid));    $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_e` WHERE `uid` = \'%s\'',DB_PERFIX, $uid));    $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_m` WHERE `uid` = \'%s\'',DB_PERFIX, $uid));    $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_b` WHERE `id` = \'%s\'',DB_PERFIX, $uid));    $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_i` WHERE `uid` = \'%s\'',DB_PERFIX, $uid));   }   public function IsOfficer($uid,$pid)   {    global $dbo;    return $dbo->ExectueScaler(sprintf('SELECT `permission` FROM `%sunion_o` WHERE `uid` = \'%s\' AND `pid` = \'%s\'',     DB_PERFIX, $uid, $pid),'permission');   }   public function Invitation($uid, $a, $b,$sub)   {    global $dbo;        $arr = array();    $arr['uid'] = $uid;    $arr['kind'] = E_U_INVIT;    $arr['a'] = $a;    $arr['b'] = $b;    $arr['modify'] = $_SERVER['REQUEST_TIME'];    $dbo->InsertRow(DB_PERFIX.'union_e', $arr);    $arr = array('uid' => $uid,      'a' =>$a,      'b' => $b,      'modify' => $_SERVER['REQUEST_TIME']);    $dbo->InsertRow(DB_PERFIX.'union_i', $arr);        $arr = array();    $arr['se'] = $a;    $arr['re'] = $b;    $arr['subject'] = $sub;    $arr['flag'] =  NOT_READ | UNI_INFO;    $arr['message'] = sprintf('uis:%s:%s', $uid, $a);    $arr['modify'] = $_SERVER['REQUEST_TIME'];    $dbo->InsertRow(DB_PERFIX.'pm', $arr);    gc_collect_cycles();   }   public function Join($uid, $iid, $pid)   {    global $dbo;    $arr = array();    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'1\' WHERE `id` = \'%s\' AND `locks` = \'0\' LIMIT 1',DB_PERFIX,$pid));    if(!$dbo->AffectedRows())     return false;    $row = $dbo->ExectueRow(sprintf('SELECT * FROM `%sunion_i` WHERE `id` = \'%s\'',DB_PERFIX,$iid));    $dbo->DeleteRecord(DB_PERFIX.'union_i',$iid);    if(!$dbo->AffectedRows())    {     $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',DB_PERFIX,$pid));     return false;    }    $pop = $dbo->ExectueScaler(sprintf('SELECT `pop` FROM `%saccount` WHERE `id` = \'%s\' LIMIT 1',DB_PERFIX,$pid),'pop');    $dbo->ExectueQuery(sprintf('UPDATE `%sunion_b` SET `members` = `members` + \'1\', `pop` = `pop` + \'%s\' WHERE `id` = \'%s\' AND `members` < `limits` LIMIT 1',       DB_PERFIX,$pop, $uid));    if(!$dbo->AffectedRows())    {     $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',DB_PERFIX,$pid));     $dbo->InsertRow(DB_PERFIX.'union_i', $row);     return false;    }    $arr['uid'] = $uid;    $arr['kind'] = E_U_JOIN;    $arr['a'] = $pid;    $arr['b'] = $uid;    $arr['modify'] = $_SERVER['REQUEST_TIME'];    $dbo->InsertRow(DB_PERFIX.'union_e', $arr);        $dbo->ExectueQuery(sprintf('INSERT INTO `%sunion_m` (`uid`, `pid`) VALUES (\'%s\',\'%s\');',     DB_PERFIX, $uid, $pid));    $pop = $dbo->ExectueScaler(sprintf('SELECT `pop` FROM `%saccount` WHERE `id` = \'%s\'', DB_PERFIX, $pid),'pop');        $dbo->ExectueQuery(sprintf('UPDATE `%stown` SET `uid` = \'%s\' WHERE `pid` = \'%s\'',      DB_PERFIX, $uid, $pid));    $dbo->ExectueQuery(sprintf('UPDATE `%sclooney` SET `uid` = \'%s\' WHERE `pid` = \'%s\'',      DB_PERFIX, $uid, $pid));    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `uid` = \'%s\', `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',DB_PERFIX, $uid, $pid));    return $uid;   }   public function Rejection($uid, $iid, $pid)   {    global $dbo;    $arr = array();    $arr['uid'] = $uid;    $arr['kind'] = E_U_INVIT_DENI;    $arr['a'] = $pid;    $arr['b'] = $uid;    $arr['modify'] = $_SERVER['REQUEST_TIME'];    $dbo->InsertRow(DB_PERFIX.'union_e', $arr);    $dbo->DeleteRecord(DB_PERFIX.'union_i',$iid);   }   public function IsInvitation($uid,$pid)   {    global $dbo;    return $dbo->ExectueScaler(sprintf('SELECT COUNT(*) AS `c` FROM `%sunion_i` WHERE `uid` = \'%s\' AND `b` = \'%s\'',     DB_PERFIX,$uid,$pid),'c');   }   public function CancelInvitation($uid,$iid,$a,$b)   {    global $dbo;    $arr = array();    $arr['uid'] = $uid;    $arr['a'] = $a;    $arr['b'] = $b;    $arr['kind'] = E_U_INVIT_BACK;    $arr['modify'] =$_SERVER['REQUEST_TIME'];    $dbo->InsertRow(DB_PERFIX.'union_e',$arr);    $dbo->DeleteRecord(DB_PERFIX.'union_i',$iid);       }   public function Fire($uid, $a, $b)   {    if($this->IsMember($uid, $b))    {     global $dbo;     $arr['uid'] = $uid;     $arr['kind'] = E_U_FIRE;     $arr['a'] = $a;     $arr['b'] = $b;     $arr['modify'] = $_SERVER['REQUEST_TIME'];     $dbo->InsertRow(DB_PERFIX.'union_e', $arr);     $pop = $dbo->ExectueScaler(sprintf('SELECT `pop` FROM `%saccount` WHERE `id` = \'%s\'', DB_PERFIX,$b),'pop');     $dbo->ExectueQuery(sprintf('UPDATE `%sunion_b` SET `members` = `members` - \'1\',`pop` = `pop` - \'%s\' WHERE `id` = \'%s\' LIMIT 1',       DB_PERFIX,$pop, $uid));     $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_m` WHERE `uid` = \'%s\' AND `pid` = \'%s\' LIMIT 1', DB_PERFIX, $uid, $b));     $dbo->ExectueQuery(sprintf('DELETE FROM `%sunion_o` WHERE `uid` = \'%s\' AND `pid` = \'%s\' LIMIT 1', DB_PERFIX, $uid, $b));     $dbo->ExectueQuery(sprintf('UPDATE `%stown` SET `uid` = \'0\' WHERE `pid` = \'%s\'',      DB_PERFIX, $b));     $dbo->ExectueQuery(sprintf('UPDATE `%sclooney` SET `uid` = \'0\' WHERE `pid` = \'%s\'',      DB_PERFIX, $b));    }   }  }  $union = new Union();  ?>