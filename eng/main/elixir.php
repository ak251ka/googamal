<?php  require_once('lib/config.php');  require_once('lib/dbo.php');  require_once('lib/object.php');  require_once('lib/data.php');  require_once('lib/defines.php');  class Elixir  {   protected $_data;   protected $_tid;      protected $_table;   public function __construct($tid)   {    $this->_data = array();    $this->_tid = $tid;          $this->_table = DB_PERFIX.'elixir_e';    $this->Load();   }   public function Load()   {    global $dbo;    $sql = $dbo->ExectueQuery(              sprintf('SELECT * FROM `%s` WHERE `tid` = \'%s\'  AND `d` = \'0\' ORDER BY `modify` ASC' ,          $this->_table, $this->_tid));    $this->_data = array();    while($row = $dbo->Read($sql))     $this->_data[] = $row;    $dbo->Cancel($sql);    gc_collect_cycles();   }      public function frozen()      {          foreach($this->_data as $e)          {              if($e['eid'] == 13)                  return $e['modify'];          }          return 0;      }      public function Modify($eid,$kind,$modify)      {          foreach($this->_data as &$e)          {              if(($e['kind'] == $eid)and ($e['kind'] == $kind) and ($e['modify']<= $modify))                  return $e['modify'];          }          return 0;      }      public function Number($eid, $kind, $modify = 0)      {          $result = 0;          foreach($this->_data as &$e)          {              if(($e['eid'] == $eid)and ($e['kind'] == $kind))                  $result += ($modify ? (($e['modify']>= $modify) ? $e['num'] : 0) : $e['num']);          }          return $result;      }      public function EndEffect($modify)      {          global $dbo;          $dbo->ExectueQuery(sprintf('UPDATE `%selixir_e` SET `d` = \'1\' WHERE `tid` = \'%s\' AND `modify` <= \'%s\'',              DB_PERFIX,$this->_tid,$modify));          $this->Load();      }      public function AddEffect($eid, $kind, $num, $modify, $pop = 0)      {          switch($eid)          {              case 1:                  $this->Elixir1($num,$kind,$modify);                  break;              case 2:                  $this->Elixir2($num,$modify);                  break;              case 6:                  $this->Elixir6($num,$kind,$modify);                  break;              case 7:                  $this->Elixir7($num,$modify);                  break;              case 12:                  $this->Elixir12($num,$kind,$modify);                  break;              case 13:                  $this->Elixir13($num,$modify,$pop);                  break;              case 14:                  $this->Elixir14($num,$modify);                  break;          }          $this->Load();      }      protected function DeleteRecord($id)      {          global $dbo;          $dbo->ExectueQuery(sprintf('UPDATE `%selixir_e` SET `d` = \'1\' WHERE `id` = \'%s\'',              DB_PERFIX, $id));      }      protected function SubElixir($eid,$kind,$num)      {          $modify = false;          foreach($this->_data as &$e)          {              if(($e['eid'] == $eid) and ($e['kind'] == $kind))              {                  $modify = true;                  if($num >= $e['num'])                  {                      $num -= $e['num'];                      $this->DeleteRecord($e['id']);                  }                  else                  {                      $e['num'] -= $num;                      $num = 0;                      $this->Update($e);                  }              }              if(!$num)                  break;          }          if($modify)              $this->Load();          return $num;      }      protected function Remove($eid,$kind)      {          global $dbo;          $table = DB_PERFIX.'elixir_e';          $modify = false;          foreach($this->_data as &$e)          {              if(($e['eid'] == $eid) and ($e['kind'] == $kind))              {                  $this->DeleteRecord($e['id']);                  $modify = true;              }          }          if($modify)              $this->Load();      }      protected function Insert($eid,$kind,$num,$modify)      {          global $dbo;          $arr = array();          $arr['tid'] = $this->_tid;          $arr['kind'] = $kind;          $arr['modify'] = $modify;          $arr['num'] = $num;          $arr['eid'] = $eid;          $dbo->InsertRow($this->_table,$arr);      }      protected function Update(&$e)      {          global $dbo;          $dbo->UpdateRow($this->_table, $e, $e['id']);      }      protected function Elixir1($num, $kind, $modify)      {          if($kind == ELIXIR_BAD)          {              $have = $this->Number(2,  ELIXIR_GOOD);              if($have)              {                  $have *= 2;                  if($num >= $have)                  {                      $num -= $have;                      $this->Remove(2, ELIXIR_GOOD);                  }                  else                  {                      $this->SubElixir(2, ELIXIR_GOOD, $num * 2);                      $num = 0;                  }              }              $arr['kind'] = ELIXIR_BAD;          }          else          {              $arr['kind'] = ELIXIR_GOOD;          }          if($num)          {              if($kind == ELIXIR_GOOD)                  $this->Insert(1, $kind, $num, $modify + (ONE_TICK * 24));              else              {                  $et = NULL;                  foreach($this->_data as $e)                  {                      if(($e['eid'] == 1) and ($e['kind'] == ELIXIR_BAD))                      {                          $et = $e;                          $et['modify'] = $modify + (ONE_TICK * 24);                          $e['num'] = (($e['modify'] > $modify) ? ( $e['num'] * (($e['modify'] - $modify) / (24 * ONE_TICK))): 0);                          $et['num'] = (int)round($num + $e['num']);                          break;                      }                  }                  if($et)                      $this->Update($et);                  else                      $this->Insert(1,$kind,$num, $modify + (ONE_TICK * 24));              }            }      }      protected function Elixir2($num, $modify)      {          foreach($this->_data as $e)          {              if(($e['eid'] == 1) and ($e['kind'] == ELIXIR_BAD) and ($e['modify'] > $modify))              {                  if($num >= ($e['num']*2))                  {                      $this->DeleteRecord($e['id']);                      $num -= ($e['num']*2);                  }                  else                  {                      $e['num'] -= (int)floor($num/2);                      $num = 0;                      $this->Update($e);                      break;                  }              }          }          if($num)              $this->Insert(2,ELIXIR_GOOD,$num, $modify + (24* ONE_TICK));      }      protected function Elixir6($num,$kind,$modify)      {          $this->Insert(6, $kind, $num, $modify);      }      protected function Elixir7($num,$modify)      {          global $dbo;          foreach($this->_data as $e)          {              if(!$num)                  break;              if($e['modify'] <= $modify)                  continue;              if($e['eid'] != 6)                  continue;              if($e['num'] > $num)              {                  $e['num'] -= $num;                  $num = 0;              }              else              {                  $num -= $e['num'];                  $e['num'] = 0;              }              if($e['num'])                  $this->Update($e);              else              {                  $this->DeleteRecord($e['id']);                  $row = $dbo->ExectueRow(                      sprintf('SELECT `id`,`mid1` FROM `%stroop_s` WHERE `tid1` = \'7\' AND `tid2` = \'%s\' AND `len` = \'%s\' AND `d` = \'0\'',                          DB_PERFIX, $this->_tid, $e['id']));                  if(!empty($row))                  {                        $dbo->DeleteRecord(DB_PERFIX.'troop_b',$row['mid1']);                      $dbo->ExectueQuery(sprintf('UPDATE `%stroop_s` SET `d` = \'1\' WHERE `id` = \'%s\' LIMIT 1;',DB_PERFIX,$row['id']));                  }              }          }          $this->Load();      }      protected function Elixir12($num,$kind, $modify)      {          $tkind = ($kind == ELIXIR_BAD ? ELIXIR_GOOD : ELIXIR_BAD);          if($this->Number(12,$tkind))              $num = $this->SubElixir(12,$tkind,$num);          if($num)              $this->Insert(12, $kind, $num, $modify);      }      protected function Elixir13($num,$modify,$pop)      {          $et = NULL;          $num = ceil($num/2);          if($num > $pop)              $num = $pop;          foreach($this->_data as $e)          {              if(($e['eid'] == 13) and ($e['modify'] > $modify))              {                  $et = $e;                  $et['num'] =                      (int)round($e['num']*(($e['modify'] - $modify)/(24 * ONE_TICK))) + $num;                  $et['modify'] = ($modify + (int)round((24*ONE_TICK )*                      (($et['num'] >= $pop) ? 1 : ($et['num']/$pop))));                  break;              }          }          if(is_null($et))              $this->Insert(13, ELIXIR_BAD, $num, $modify + (int)round((24*ONE_TICK )*($num/$pop)));          else              $this->Update($et);      }      protected function Elixir14($num,$modify)      {          $num /= 2;          foreach($this->_data as $e)          {              if($e['eid'] == 13 and ($e['modify'] > $modify))              {                  $tick = (($e['modify'] - $modify)/ONE_TICK);                  $need = $e['num'] * $tick;                  if($need <= $num)                  {                      $this->DeleteRecord($e['id']);                      $num = 0;                  }                  else                  {                      if($tick <= 1)                      {                          $e['num'] -= $num;                          $num = 0;                      }                      else                      {                          while($num > $e['num'])                          {                              if($tick <= 1)                                  break;                              if($num > $e['num'])                              {                                  $num -= $e['num'];                                  $tick--;                              }                          }                          $e['modify'] = $modify +($tick * ONE_TICK);                          $e['num'] = $e['num'] * $tick;                          $e['num'] -= $num;                          $e['num'] = ceil($e['num']/$tick);                          $num = 0;                      }                      $this->Update($e);                      break;                  }              }          }          $this->Load();      }        public function Need($eid,$modify)      {          $teid = 0;          switch($eid)          {              case 2:                  $teid = 1;                  break;              case 7:                  $teid = 6;                  break;              case 10:                  $teid = 10;                  break;              case 12:                  $teid = 12;                  break;              case 14:                  $teid = 13;                  break;              default:                  $teid = 0;                  break;          }          $need = 0;          if($teid)          {              foreach($this->_data as $e)              {                  if(($e['eid'] != $teid) or ($e['kind'] != ELIXIR_BAD) or ($e['modify'] <= $modify))                      continue;                    if(($teid == 1) or ($teid == 12))                      $need += ($e['num']*2);                  elseif($teid == 13)                      $need += ceil((($e['modify'] - $modify) / ONE_TICK) * $e['num']) * 2;                  elseif($teid == 6)                      $need += ($e['num']+ 1);                  else                      $need += $e['num'];              }          }          return $need;      }      public function &GetElixir($modify)      {          $arr = array(1 => 0, 2 => 0, 3 => 0, 4 => 0, 5 => 0, 6 => 0, 7 => 0, 8 => 0, 9=>0, 10=>0, 11 => 0, 12 => 0, 13 => 0, 14 =>0);          foreach ($this->_data as $e)          {              if($e['modify'] >= $modify)              {                  if($e['eid'] != 6)                      $arr[$e['eid']] += ($e['kind'] == ELIXIR_GOOD ? $e['num'] : -$e['num']);                  elseif($e['kind'] == ELIXIR_GOOD)                      $arr[6] += $e['num'];              }          }          return $arr;      }      public function SetEnding($eid,$kind,$modify)      {          if(!count($this->_data))              return;          global $dbo;          $dbo->ExectueQuery(sprintf('UPDATE `%s` SET `modify` = \'%s\' WHERE `tid` = \'%s\' AND `eid` = \'%s\' AND `kind` = \'%s\' AND `d` = \'0\'',              $this->_table, $modify, $this->_tid, $eid, $kind));          if($dbo->AffectedRows())              $this->Load();      }  }  ?>