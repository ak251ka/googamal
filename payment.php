<?php  require_once('eng/sec/session.php');  require_once('lib/form.php');  require_once('eng/main/account.php');  require_once('eng/main/plus.php');  require_once('lib/utility.php');  require_once('eng/conn/pm.php');  require_once('eng/main/union.php');  require_once('eng/main/mission.php');  if(!$session->IsLoad() or $session->GetType() != LOG)      $session->Href('index.php');  $account = new Account($session->aid,true);  if(!$account->IsLoad())      $session->Href('index.php');  $account->UpdateTown($_SERVER['REQUEST_TIME']);  if(!$account->ac)      $session->Href('index.php');  $plus = &$account->GetPlus();  $hero = &$account->GetHero();  $town = &$account->GetDefaultTown();  $pm = new PM($session->aid);  require_once('temp/plus/RSAProcessor.class.php');  include_once 'temp/plus/parser.php';  $merchantCode = 569101;  $terminalCode = 569831;  $form->Header(array('plus'));  function ValidPayment($invoiceNumber)  {        global $dbo;      global $merchantCode;      global $terminalCode;      global $text;      $processor = new RSAProcessor($_SERVER['DOCUMENT_ROOT'].'/temp/plus/key.xml',RSAKeyType::XMLFile);      $row = $dbo->ExectueRow(sprintf('SELECT * FROM `%spayment` WHERE `id` = \'%s\' AND `result` = \'0\'',          DB_PERFIX, $invoiceNumber));      if(empty($row))          return false;      $sendingData = array();      $sendingData['merchantCode'] = $merchantCode;      $sendingData['terminalCode'] = $terminalCode;      $sendingData['invoiceNumber'] = $invoiceNumber;      $date = getdate($row['modify']);      $day = MiladiToShamsi($date['year'], $date['mon'], $date['mday']);      $sendingData['invoiceDate'] = sprintf('%d/%d/%d %d:%d:%d',$day[0],$day[1],$day[2],          $date['hours'],$date['minutes'],$date['seconds']);      $sendingData['amount'] = $row['amount'];      $sendingData['timeStamp'] =  date('Y/m/d H:i:s');              $data = "#".          $sendingData['merchantCode'] ."#".          $sendingData['terminalCode'] ."#".          $sendingData['invoiceNumber'] ."#".          $sendingData['invoiceDate'] ."#".          $sendingData['amount'] ."#".          $sendingData['timeStamp'] ."#";      $data = sha1($data,true);      $sign =  $processor->sign($data);      $sendingData['sign'] =  base64_encode($sign);      $verifyresult = post2https($sendingData,'https://pep.shaparak.ir/VerifyPayment.aspx');      var_dump($verifyresult);      if($verifyresult)      {          $xml = new MyXML($verifyresult);          if($xml)          {              if(($xml->result == 'True') or ($xml->result === true))              {                  $row['result'] = '2';                  $dbo->UpdateRow(DB_PERFIX.'payment',$row,$row['id']);                  return true;              }              $text = $xml->resultMessage;              $row['result'] = '1';              $dbo->UpdateRow(DB_PERFIX.'payment',$row,$row['id']);          }      }      return false;  }    $text = '';  if(!empty($_GET) and isset($_GET['tref']) and isset($_GET['iN']))  {      if($dbo->ExectueScaler(          sprintf('SELECT COUNT(*) as `c` FROM `%spayment` WHERE `id` = \'%s\' AND `result` = \'0\'',              DB_PERFIX,$_GET['iN']),'c'))      {          $result = post2https( array('invoiceUID' => $_GET['tref']),'https://pep.shaparak.ir/CheckTransactionResult.aspx');          if($result)          {              $xml = new MyXML($result);              if($xml)              {                  if(($xml->terminalCode == $terminalCode)                      and                  ($xml->merchantCode == $merchantCode ))                  {                      $dbo->ExectueQuery(                          sprintf('UPDATE `%spayment` SET `tref`= \'%s\',`rn`= \'%s\',`tn`=\'%s\' WHERE `pid` = \'%s\' and `result` = \'0\' and `id` = \'%s\' LIMIT 1;'                              ,DB_PERFIX,                              $xml->transactionReferenceID,                              $xml->referenceNumber,                              $xml->traceNumber,                              $account->id,                              $xml->invoiceNumber));                      if($dbo->AffectedRows())                      {                          if(ValidPayment($xml->invoiceNumber))                          {                              $talant = $dbo->ExectueScaler(sprintf('SELECT `talant` FROM `%spayment` WHERE `id` = \'%s\' LIMIT 1;',                                  DB_PERFIX,$xml->invoiceNumber),'talant');                              $text = sprintf($lang['BillValidated'],$talant,$form->PlayerLink(2,'support'));                              $plus->UseTalant($talant,BUY_TALANT,INCOMMING);                              $account->SetFields(array('talant' => $talant));                          }                      }                  }              }          }      }  }    ?>
<div class='h56'>
<img src='img/m0.png'  />
</div>
<div class='bgm1'><?php if(!empty($text)) echo $text; ?>
<table class='p_table center buyTalant'>
<tr><td colspan='4'><?php echo $lang['Bills'];?></td> </tr>
<tr><td><?php echo $lang['InDate'];?></td><td><?php echo $lang['Talant'];?></td><td><?php echo $lang['Price'];?></td><td><?php echo $lang['Status'];?></td></tr>
<?php  $sql = $dbo->ExectueQuery(sprintf('SELECT * FROM `%spayment` WHERE `pid` = \'%s\' ORDER BY `modify` DESC',      DB_PERFIX,$account->id));  while($row = $dbo->Read($sql))  {      printf('<tr><td>%s</td><td>%s</td><td>%s</td>',          DateToString($row['modify']),$row['talant'],$row['amount']);          printf('<td>%s</td></tr>',($row['result'] == 2) ?              $lang['SuccessfulB'] : $lang['UnsuccessfulB']);  }  $dbo->Cancel($sql);  gc_collect_cycles();  ?>
</table>
</div>
<div class='h56'>
<img src='img/m2.png'  />
</div>
<?php  $form->Footer();  $session->Save();  ?>