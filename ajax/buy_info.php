<?php  if(!defined('NEW_INCLUDE'))  {   $path = $_SERVER['DOCUMENT_ROOT'];   set_include_path(get_include_path() . PATH_SEPARATOR . $path);   define('NEW_INCLUDE', 1);  }  require_once('lib/defines.php');  require_once('lib/config.php');  require_once('lib/dbo.php');  require_once('eng/sec/session.php');  require_once('lib/utility.php');  require_once('lib/defines.php');  require_once('lng/per.php');  define('NO_RECORD', 1);  define('SESSION_EXPIRE', 2);  class BuyWeapon  {   protected $_data;   protected $_player;   protected $_error;   public function __construct($id, $pid)   {    global $dbo;          $this->_error = NO_ERROR;    $this->_data = $dbo->ExectueRow(     sprintf('SELECT `id`,`p1`,`p2`,`ise`,`nb`,`mb`,`modify` FROM `%shero_hs` WHERE `id` = \'%s\'', DB_PERFIX, $id));    if(empty($this->_data))     $this->_error = NO_RECORD;    else     $this->_player = $dbo->ExectueRow(sprintf('SELECT `id`,`name`,`m_b`, `money` FROM `%saccount` WHERE `id` = \'%s\'', DB_PERFIX, $pid));          if(empty($this->_player))              $this->_error = SESSION_EXPIRE;   }   protected function Lock($id)   {    if(!$id)     return true;    global $dbo;    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'1\' WHERE `id` = \'%s\' AND `locks` = \'0\' LIMIT 1',DB_PERFIX,$id));    if(!$dbo->AffectedRows())     return false;          $this->_player = $dbo->ExectueRow(sprintf('SELECT `id`,`name`,`m_b`, `money` FROM `%saccount` WHERE `id` = \'%s\'',DB_PERFIX,$this->_player['id']));    return true;   }   protected function LockItem()   {    global $dbo;    $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `locks` = \'1\' WHERE `id` = \'%s\' AND `locks` = \'0\' LIMIT 1',     DB_PERFIX, $this->_data['id']));    if(!$dbo->AffectedRows())     return false;    $this->_data = $dbo->ExectueRow(sprintf(     'SELECT `id`,`p1`,`p2`,`ise`,`nb`,`mb`,`modify` FROM `%shero_hs` WHERE `id` = \'%s\'', DB_PERFIX, $this->_data['id']));    return true;   }   protected function UnLock($id)   {    if(!$id)     return;    global $dbo;    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',DB_PERFIX,$id));   }      public function UnLockItem($lock = false)      {          global $dbo;          if($lock)              $this->_data['locks'] = '0';          else              unset($this->_data['locks']);          $dbo->UpdateRow(DB_PERFIX.'hero_hs', $this->_data);        }   protected function Incomming($pid, $money)   {    global $dbo;    if(!$pid)     return;    $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `m_b` = `m_b` + \'%s\' WHERE `id` = \'%s\' LIMIT 1;',      DB_PERFIX, $money, $pid));    $arr = array();    $arr['pid'] = $pid;    $arr['kind'] = CANCEL_ITEM_H;    $arr['subkind'] = '1';    $arr['types'] = INCOMMING;    $arr['cost'] = $money;    $arr['modify'] = $_SERVER['REQUEST_TIME'];    $dbo->InsertRow(DB_PERFIX.'plus',$arr);   }     protected function Spend($pid,$money)   {    global $dbo;    $arr['pid'] = $pid;    $arr['kind'] = BUY_ITEM_H;    $arr['subkind'] = '1';    $arr['types'] = SPEND;    $arr['cost'] = $money;    $arr['modify'] = $_SERVER['REQUEST_TIME'];    $dbo->InsertRow(DB_PERFIX.'plus',$arr);   }     public function NewValue($money)   {    global $dbo;            if($this->_error)              return;    if(!$this->LockItem())     return;    if($this->_data['modify'] < $_SERVER['REQUEST_TIME'])    {     $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',      DB_PERFIX, $this->_data['id']));     return;    }          if(!$this->Lock($this->_player['id']))          {              $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                  DB_PERFIX,$this->_data['id']));              return;          }          $player2 = false;          if($this->_data['p2'] == $this->_player['id'])          {              if(($money < $this->_data['mb']) and ($money > $this->_data['nb']))              {                  $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `mb` = \'%s\',`locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                      DB_PERFIX, $money, $this->_data['id']));                  $this->Incomming($this->_data['p2'],$this->_data['mb'] - $money);                  $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `m_b` =  `m_b` + \'%s\',`locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                      DB_PERFIX, $this->_data['mb'] - $money, $this->_player['id']));                  $this->_data['mb'] = $money;                  return;              }              if(($money > $this->_data['mb']) and                  ($money <= ($this->_data['mb'] + $this->_player['m_b'] + $this->_player['money'])))              {                  $tmoney = $money - $this->_data['mb'];                  $this->_data['mb'] = $money;                  $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `mb` = \'%s\', `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                      DB_PERFIX, $money, $this->_data['id']));                  $this->Spend($this->_data['p2'], $tmoney);                  if($this->_player['m_b'] >= $tmoney)                  {                      $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `m_b` = `m_b` - \'%s\', `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                          DB_PERFIX, $tmoney, $this->_player['id']));                  }                  else                  {                      $dbo->ExectueQuery(                          sprintf('UPDATE `%saccount` SET `m_b` = `m_b` - \'%s\', `money` = `money` - \'%s\', `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                              DB_PERFIX, $this->_player['m_b'], $tmoney - $this->_player['m_b'], $this->_player['id']));                  }                  return;              }              $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                  DB_PERFIX,$this->_data['id']));              $this->UnLock($this->_player['id']);              return;          }          if(($money <= $this->_data['mb']) or              ($money > ($this->_player['m_b'] + $this->_player['money'])))          {              $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                  DB_PERFIX,$this->_data['id']));              $this->UnLock($this->_player['id']);              return;          }          if($this->_data['p2'] != $this->_player['id'])          {              $player2 = true;              if(!$this->Lock($this->_data['p2']))              {                  $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',                      DB_PERFIX,$this->_data['id']));                  $this->UnLock($this->_player['id']);                  return;              }          }          $this->_data['ise']++;          $this->Incomming($this->_data['p2'],$this->_data['mb']);          if($player2)              $this->UnLock($this->_data['p2']);          $this->_data['nb']++;          $this->_data['mb'] = $money;          if($this->_player['m_b'] >= $money)          {              $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `m_b` = `m_b` - \'%s\' WHERE `id` = \'%s\' LIMIT 1',                  DB_PERFIX, $money,$this->_player['id']));          }          else          {              $dbo->ExectueQuery(sprintf('UPDATE `%saccount` SET `m_b` = `m_b` - \'%s\', `money` = `money` - \'%s\' WHERE `id` = \'%s\' LIMIT 1',                  DB_PERFIX, $this->_player['m_b'], $money - $this->_player['m_b'],$this->_player['id']));          }            if($this->_data['modify'] - $_SERVER['REQUEST_TIME'] < (ONE_TICK / 60) * 4)              $this->_data['modify'] = $_SERVER['REQUEST_TIME'] + ((ONE_TICK / 60) * 4);          $this->_data['p2'] = $this->_player['id'];          $dbo->UpdateRow(DB_PERFIX.'hero_hs', $this->_data, $this->_data['id']);          $this->UnLock($this->_data['p2']);          $dbo->ExectueQuery(sprintf('UPDATE `%shero_hs` SET `locks` = \'0\' WHERE `id` = \'%s\' LIMIT 1',              DB_PERFIX, $this->_data['id']));   }     public function ShowResult()   {    global $dbo;    global $lang;    if($this->_error)     echo json_encode($this->_error);    else    {              echo json_encode($this->_data['id'].'<r>');              echo json_encode($this->_data['ise'].'<r>');              echo json_encode($this->_data['nb'].'<r>');              echo json_encode($this->_data['p2'].'<r>');              echo ($this->_data['p2'] ?                  htmlspecialchars($dbo->ExectueScaler(                      sprintf('SELECT `name` FROM `%saccount` WHERE `id` = \'%s\' LIMIT 1',DB_PERFIX, $this->_data['p2']),'name'))                      : $lang['NoBuy']).json_encode('<r>');              if(($this->_player['m_b'] + $this->_player['money']) > $this->_data['nb'])              {                  echo json_encode('0'.'<r>');                  echo $lang['Price'];              }              else              {                  echo json_encode('1'.'<r>');                  printf($lang['NotEnough'],$lang['Money']);              }              if($this->_player['id'] == $this->_data['p2'])                  echo json_encode('<r>'.$this->_data['mb']);              else                  echo json_encode('<r>'.'0');    }   }   public function NoError()   {    return $this->_error;   }  }  if(!isset($_POST['id']))  {   echo json_encode(NO_RECORD);   $session->Save();   return;  }    if($session->GetType() != LOG)  {   echo json_encode(SESSION_EXPIRE);   return;  }  else  {      if($session->aid != $session->pid)      {          $session->Close();          echo json_encode(SESSION_EXPIRE);      }      else      {          $buy = new BuyWeapon(ValidNumber($_POST['id'], true), $session->aid);          $error = $buy->NoError();          if(!$error and isset($_POST['value']))          {              $buy->NewValue(ValidNumber($_POST['value'],true));          }          elseif($error)              $session->Close();          $buy->ShowResult();      }  }  ?>