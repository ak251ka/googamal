<?php  require_once('eng/sec/session.php');  require_once('lib/form.php');  require_once('eng/conn/pm.php');  require_once('eng/main/account.php');  require_once('eng/main/plus.php');  require_once('lib/defines.php');  require_once('lib/utility.php');  require_once('eng/main/hero.php');  require_once('eng/main/union.php');  require_once('eng/main/mission.php');  if(!$session->IsLoad() or $session->GetType() != LOG)   $session->Href('index.php');  $account = new Account($session->aid);  if(!$account->IsLoad())   $session->Href('index.php');  if($account->life >0)   $account->SwitchTown($account->htid);  elseif(is_null($account->rebirth))   $account->SetFields(array('htid' => $account->tid), false);  $account->UpdateTown($_SERVER['REQUEST_TIME']);  if(!$account->ac)      $session->Href('index.php');    $plus = $account->GetPlus();  $hero = $account->GetHero();  $town = &$account->GetDefaultTown();  if($account->training == 6)      $mission->SetMission();  $pm = new PM($session->aid);  define('P_WEAPON',      'psw');  define('P_WEAPON_M',  'pwm');  define('P_FACE',      'psf');  define('S_FACE',      'sf');  define('S_POWER',     'shp');  define('H_REBIRTH',    'rbh');  define('H_REBIRTH_R', 'rbr');  define('H_REBIRTH_T', 'rbt');  define('RESET_H_P',    'rhp');  define('SET_H_P',  'sehp');  define('SET_POINT',   'setp');  define('P_W_BUY',  'pwmb');  define('P_W_SELL',    'pwms');  define('P_W_C_SELL',    'cwms');  define('P_W_D_SOLD',    'dswm');  define('P_W_BOUGTH',      'pwb');  define('P_FIND_TREASURE', 'pft');  define('P_INVI_TREASURE', 'pit');  define('P_IN_TREASURE', 'prit');  define('P_OUT_TREASURE', 'poit');  define('GO_ADVENTURE','gad');  define('FIND_TREASURE', 'ft');  define('INVITE_TREASURE','invt');  define('ACCEPT_INVITE','ainvt');  $show = isset($_GET['show']) ? $_GET['show']: P_FACE;    $session->FreeMemory();  if(isset($_POST['com']))  {   if(!$account->Lock())    $_POST = array('com' => '0');     switch($_POST['com'])   {    case P_FACE:     if(!isset($_POST['kind']))      break;     if($_POST['kind'] == S_FACE)     {      $arr = array();      if(isset($_POST['hfa']))      {       $_POST['hfa'] = ValidNumber($_POST['hfa']);       if($_POST['hfa'] >= 1 and $_POST['hfa'] <= 4)       {        $account->hfa = $_POST['hfa'];        $arr['hfa'] = $_POST['hfa'];       }      }      if(isset($_POST['hfb']))      {       $_POST['hfb'] = ValidNumber($_POST['hfb']);       if($_POST['hfb'] >= 1 and $_POST['hfb'] <= 4)       {        $account->hfb = $_POST['hfb'];        $arr['hfb'] = $_POST['hfb'];       }      }      if(isset($_POST['hfc']))      {       $_POST['hfc'] = ValidNumber($_POST['hfc']);       if($_POST['hfc'] >= 1 and $_POST['hfc'] <= 4)       {        $account->hfc = $_POST['hfc'];        $arr['hfc'] = $_POST['hfc'];       }      }      if(isset($_POST['hfd']))      {       $_POST['hfd'] = ValidNumber($_POST['hfd']);       if($_POST['hfd'] >= 1 and $_POST['hfd'] <= 4)       {        $account->hfd = $_POST['hfd'];        $arr['hfd'] = $_POST['hfd'];       }      }      if(isset($_POST['hff']))      {       $_POST['hff'] = ValidNumber($_POST['hff']);       if($_POST['hff'] >= 1 and $_POST['hff'] <= 4)       {        $account->hff = $_POST['hff'];        $arr['hff'] = $_POST['hff'];       }      }      if(isset($_POST['hfr']))      {       $_POST['hfr'] = ValidNumber($_POST['hfr']);       if($_POST['hfr'] >= 0 and $_POST['hfr'] <= 4)       {        $account->hfr = $_POST['hfr'];        $arr['hfr'] = $_POST['hfr'];       }      }      if(isset($_POST['hfm']))      {       $_POST['hfm'] = ValidNumber($_POST['hfm']);       if($_POST['hfm'] >= 0 and $_POST['hfm'] <= 4)       {        $account->hfm = $_POST['hfm'];        $arr['hfm'] = $_POST['hfm'];       }      }      if(isset($_POST['hfs']))      {       $_POST['hfs'] = ValidNumber($_POST['hfs']);       if($_POST['hfs'] >= 0 and $_POST['hfs'] <= 4)       {        $account->hfs = $_POST['hfs'];        $arr['hfs'] = $_POST['hfs'];       }      }      if(!empty($arr))      {       $account->SetField($arr);       $hero->SetFace();      }      break;     }     if($_POST['kind'] == SET_H_P)     {      if(!isset($_POST['subkind']))       break;      $_POST['subkind'] = ValidNumber($_POST['subkind']);      $arr = array();      if($_POST['subkind'] >= 1 and $_POST['subkind'] <= 14)      {       if($account->pow1 == $_POST['subkind'] or $account->pow2 == $_POST['subkind'] or        $account->pow3 == $_POST['subkind'] or $account->pow4 == $_POST['subkind'])         break;       if(!$account->pow1)       {        $account->pow1 = $_POST['subkind'];        $account->p1 = '0';        $arr['p1'] = '0';        $arr['pow1'] = $_POST['subkind'];       }       elseif(!$account->pow2)       {        $account->pow2 = $_POST['subkind'];        $account->p2 = '0';        $arr['p2'] = '0';        $arr['pow2'] = $_POST['subkind'];       }       elseif(!$account->pow3)       {        $account->pow3 = $_POST['subkind'];        $account->p3 = '0';        $arr['p3'] = '0';        $arr['pow3'] = $_POST['subkind'];       }       elseif(!$account->pow4)       {        $account->pow4 = $_POST['subkind'];        $account->p4 = '0';        $arr['p4'] = '0';        $arr['pow4'] = $_POST['subkind'];       }       if(!empty($arr))       {        $account->SetField($arr);        $hero->SetPoints();       }      }      break;     }     if($_POST['kind'] == RESET_H_P)     {      $plus->ResetHero();      $hero->SetPoints();      break;     }     if($_POST['kind'] == SET_POINT)     {      if(!$account->point)       break;      $_POST['pow1'] = isset($_POST['pow1']) ? ValidNumber($_POST['pow1']) : 0;      $_POST['pow2'] = isset($_POST['pow2']) ? ValidNumber($_POST['pow2']) : 0;      $_POST['pow3'] = isset($_POST['pow3']) ? ValidNumber($_POST['pow3']) : 0;      $_POST['pow4'] = isset($_POST['pow4']) ? ValidNumber($_POST['pow4']) : 0;            if($account->pow1)      {       if($account->p1 < $_POST['pow1'] and $_POST['pow1'] <= 100 and $account->point >= $_POST['pow1'] - $account->p1)       {        $temp = $_POST['pow1'] - $account->p1;        if($temp < 0)         break;        $account->p1 = $_POST['pow1'];        $account->point = $account->point - $temp;       }      }      if($account->pow2)      {       if($account->p2 < $_POST['pow2'] and $_POST['pow2'] <= 100 and $account->point >= $_POST['pow2'] - $account->p2)       {        $temp = $_POST['pow2'] - $account->p2;        if($temp < 0)         break;        $account->p2 = $_POST['pow2'];        $account->point = $account->point - $temp;       }      }      if($account->pow3)      {       if($account->p3 < $_POST['pow3'] and $_POST['pow3'] <= 100 and $account->point >= $_POST['pow3'] - $account->p3)       {        $temp = $_POST['pow3'] - $account->p3;        if($temp < 0)         break;        $account->p3 = $_POST['pow3'];        $account->point = $account->point - $temp;       }      }      if($account->pow4)      {       if($account->p4 < $_POST['pow4'] and $_POST['pow4'] <= 100 and $account->point >= $_POST['pow4'] - $account->p4)       {        $temp = $_POST['pow4'] - $account->p4;        if($temp < 0)         break;        $account->p4= $_POST['pow4'];        $account->point = $account->point - $temp;       }      }      $arr = array('p1'=>$account->p1, 'p2'=>$account->p2, 'p3'=>$account->p3, 'p4'=>$account->p4,       'point'=>$account->point);      $hero->SetPoints();      $account->SetField($arr);      break;     }     if($_POST['kind'] == H_REBIRTH)     {      if(!isset($_POST['subkind']))       break;      if($_POST['subkind'] == H_REBIRTH_R)      {       $r = $account->lvl > 24 ? 24000 : $account->lvl * 1000;       if($town->HaveEnough($r,$r,$r,$r,$r))       {        $account->rebirth = (int)$_SERVER['REQUEST_TIME'] + ($account->lvl > 23 ? 24 * ONE_TICK : ($account->lvl + 1) * ONE_TICK);        $town->SubResource($r,$r,$r,$r,$r);        $account->SetField(array('rebirth' =>$account->rebirth));       }      }      if($_POST['subkind'] == H_REBIRTH_T)       $plus->RebirthHero();     }     break;    case P_WEAPON:     $arr = array();     foreach($_POST as $key=>$value)     {      if(NoNumbers($key) == 'hv_' and $value != '?')      {       $temp = explode('_',$key);       $arr[$temp[1]] = ValidNumber($value);      }     }     $hero->SetList($arr);     break;    case P_WEAPON_M:     if(!isset($_POST['kind']) or !isset($_POST['subkind']))      break;     switch($_POST['kind'])     {      case P_W_SELL:       $hero->SellItem($_POST['subkind']);       break;      case P_W_C_SELL:       $hero->CancelSell($_POST['subkind']);       break;      case P_W_D_SOLD:       foreach($_POST as $key => $value)       {               if(NoNumbers($key) == 'cb')        {         $hero->DelSold($value, true);        }       }       break;     }    break;    case P_FIND_TREASURE:     if($town->GetLevel(19)<=0)      break;          if(!$hero->Available())      break;          if(!isset($_POST['kind']))      break;          if($_POST['kind'] == GO_ADVENTURE)     {      if($account->adv > $_SERVER['REQUEST_TIME'])       break;      $hero->SendToAdventure();     }     elseif(isset($_POST['subkind']))     {      $_POST['subkind'] = ValidNumber($_POST['subkind'],true);      if($_POST['kind'] == ACCEPT_INVITE)       $hero->GoTreasure($_POST['subkind']);      elseif($_POST['kind'] == FIND_TREASURE)       $hero->FindTreasure($_POST['subkind']);           }     break;    case P_INVI_TREASURE:     if(!isset($_POST['subkind']) or !isset($_POST['kind']))      break;     $_POST['kind'] = ValidNumber($_POST['kind'], true);     if(!$_POST['kind'])      break;     if(empty($_POST['subkind']))      break;     if(!($id = $account->GetId($_POST['subkind'])))      break;     $hero->InviteTreasure($_POST['kind'],$id);     break;   }   $account->UnLock();  }  $form->Header(array('hero','sliderButton'),array('hero','sliderButton','ajax'));  ?>
<div class="massageList">
<div class="toolMenu">
<a href="hero.php?show=<?php echo P_FACE;?>" class="m_i_w"><?php echo $lang['Face'];?></a>
<a href="hero.php?show=<?php echo P_WEAPON;?>"><?php echo $lang['H_Weapon'];?></a>
<a href="hero.php?show=<?php echo P_WEAPON_M;?>"><?php echo $lang['Market'];?></a>
<a href="hero.php?show=<?php echo P_FIND_TREASURE;?>"><?php echo $lang['Treasure'];?></a>
<a href="hero.php?show=<?php echo P_INVI_TREASURE;?>"><?php echo $lang['Invitation'].' '. $lang['Treasure'];?></a>
</div>
</div>
<div class="h56">
<img src="img/m0.png"  />
</div>
<div class="bgm1">
<?php  if($session->Permission(OWNER | BAND_TOWN))  {   $power = $hero->GetPowerDesc();   switch($show)   {    case P_FIND_TREASURE:     require_once('temp/hero/p_find_treasure.php');     break;    case P_WEAPON:     require_once('temp/hero/p_weapon.php');     break;    case P_WEAPON_M:     require_once('temp/hero/p_weapon_m.php');     break;    case P_INVI_TREASURE:     require_once('temp/hero/p_inv_t.php');     break;    default:    case P_FACE:     require_once('temp/hero/p_face.php');     break;   }  }  else   $form->BlockPage();  ?>
</div>
<div class="h56">
<img src="img/m2.png"  />
</div>
<?php  $form->Footer();  $session->Save();  ?>